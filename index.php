<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Прокрутка: событие scroll</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
<div id="avatar">
<div class="face">
   <div class="eye left">
       <div class="pupil">
       </div>
   </div>
   <div class="eye right">
       <div class="pupil">
       </div>
   </div>
</div>
</div>
<h1>Событие onscroll происходит, когда элемент прокручивается.</h1>
<br>
<p> В отличие от события onwheel (колесико мыши), его могут генерировать только прокручиваемые элементы или окно window. Но зато оно генерируется всегда, при любой прокрутке, не обязательно «мышиной».</p>
<br>
<p>Например, следующая функция при прокрутке окна выдает количество прокрученных пикселей:</p>
<br><br><br><br><br><br>
<br><br><br><br><br><br>
<p>Например, следующая функция при прокрутке окна выдает количество прокрученных пикселей:</p>
<hr>
<pre>
<code> window.onscroll = function() {
  var scrolled = window.pageYOffset || document.documentElement.scrollTop;
  document.getElementById('showScroll').innerHTML = scrolled + 'px';
}</code>
</pre>
<hr>
<br><br><br><br><br>
<br><br><br><br><br>
<p> В действии: Текущая прокрутка = 0px</p>
<br><br><br>
<p> Каких-либо особенностей события здесь нет, разве что для его использования нужно отлично представлять, как получить текущее значение прокрутки или прокрутить документ. Об этом мы говорили ранее, в главе Размеры и прокрутка элементов.
<pre>Размеры и прокрутка элементов
Для того, чтобы показывать элементы на произвольных местах страницы, необходимо во-первых, знать CSS-позиционирование, а во-вторых – уметь работать с «геометрией элементов» из JavaScript.

В этой главе мы поговорим о размерах элементов DOM, способах их вычисления и метриках – различных свойствах, которые содержат эту информацию.

Образец документа
Мы будем использовать для примера вот такой элемент, у которого есть рамка (border), поля (padding), и прокрутка:
Внимание, полоса прокрутки!
В иллюстрации выше намеренно продемонстрирован самый сложный и полный случай, когда у элемента есть ещё и полоса прокрутки.

В этом случае полоса прокрутки «отодвигает» содержимое вместе с padding влево, отбирая у него место.

Именно поэтому ширина содержимого обозначена как content width и равна 284px, а не 300px, как в CSS.

Точное значение получено в предположении, что ширина полосы прокрутки равна 16px, то есть после её вычитания на содержимое остаётся 300 - 16 = 284px. Конечно, она сильно зависит от браузера, устройства, ОС.

Мы должны в точности понимать, что происходит с размерами элемента при наличии полосы прокрутки, поэтому на картинке выше это отражено.
</pre>
</hr>
</p>
<br><br><br>
<p> Некоторые области применения onscroll:</p>
<br><br><br>
<p> Показ дополнительных элементов навигации при прокрутке. Подгрузка и инициализация элементов интерфейса, ставших видимыми после прокрутки. Вашему вниманию предлагаются несколько задач, которые вы можете решить сами или посмотреть использование onscroll на их примере.</p>

<script src="/js/onscroll.js"></script>
</body>
</html>